@page "/formulaire"
@inject NavigationManager Navigation
@using IntegrationV3R_PortailFournisseur.Shared.ComposantsFormulaire
@using Microsoft.JSInterop

@inject IJSRuntime JSRuntime

<CompPreremplissage OnDataFetched="HandleSharedData" />

<div class="container-fluid  formulaire-container">
	<NavbarFormulaire OnPageSelected="HandlePageSelected" CurrentPage="selectedPageIndex" />

	<div style="display:@(selectedPageIndex == 0 ? "block" : "none")">
		<CompFormulaireIdentification @ref="compIdentification" OnPageSelected="HandlePageSelected" Checkpoint="SetFormCheckpoint"/>
	</div>
	<div style="display:@(selectedPageIndex == 1 ? "block" : "none")">
		<CompFormulaireAdresse @ref="compAdresse" OnPageSelected="HandlePageSelected" Checkpoint="SetFormCheckpoint" BDFetched="NextBDFetch"/>
	</div>
	<div style="display:@(selectedPageIndex == 2 ? "block" : "none")">
		<CompFormulaireContact OnPageSelected="HandlePageSelected" Checkpoint="SetFormCheckpoint" />
	</div>
	<div style="display:@(selectedPageIndex == 3 ? "block" : "none")">
		<CompFormulaireProduit OnPageSelected="HandlePageSelected" Checkpoint="SetFormCheckpoint" />
	</div>
	<div style="display:@(selectedPageIndex == 4 ? "block" : "none")">
		<CompFormulaireRBQ @ref="compRBQ" OnPageSelected="HandlePageSelected" Checkpoint="SetFormCheckpoint" BDFetched="NextBDFetch" />
	</div>
	<div style="display:@(selectedPageIndex == 5 ? "block" : "none")">		
		<CompFormulaireBrochure OnPageSelected="HandlePageSelected" Checkpoint="SetFormCheckpoint" />
	</div>
</div>


@code {
	private CompFormulaireIdentification compIdentification;
	private CompFormulaireAdresse compAdresse;
	private CompFormulaireRBQ compRBQ;



	private int selectedPageIndex = 0;

	public int _checkpoint = 8;

	public bool _sharedData = false;

	public int _FetchedComp = 1;

	private void SetFormCheckpoint(int pageIndex)
	{
		if(pageIndex > _checkpoint)
		{
			_checkpoint = pageIndex;
		}
	}

	private void HandlePageSelected(int pageIndex)
	{
		if (pageIndex <= _checkpoint)
		{
			selectedPageIndex = pageIndex;
		}
	}

	private void HandleSharedData(bool value)
	{
		compIdentification.LoadSharedData();
		compAdresse.LoadSharedData();
		compRBQ.LoadSharedData();
	}

	private void NextBDFetch()
	{
		_FetchedComp++;

		switch (_FetchedComp)
		{
			case 2 :
				compRBQ.FetchDataDB();
				break;

		}

		Console.WriteLine("In FORMULAIRE");
	}
}
